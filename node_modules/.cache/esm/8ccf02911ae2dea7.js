let sendSuccessResponse,sendErrorResponse,UserModel,PostModel,CommentModel;_1ae‍.x([["writeComment",()=>writeComment],["editComment",()=>editComment],["hideComment",()=>hideComment],["showComment",()=>showComment]]);_1ae‍.w("../helper/common",[["sendSuccessResponse",["sendSuccessResponse"],function(v){sendSuccessResponse=v}],["sendErrorResponse",["sendErrorResponse"],function(v){sendErrorResponse=v}]]);_1ae‍.w("../schemas/user",[["UserModel",["UserModel"],function(v){UserModel=v}]]);_1ae‍.w("../schemas/posts",[["PostModel",["PostModel"],function(v){PostModel=v}]]);_1ae‍.w("../schemas/comments",[["CommentModel",["CommentModel"],function(v){CommentModel=v}]]);




const writeComment = async (req, res) => {
  const body = {
    commentContent: req.body.postContent,
    userId: req.body.userId,
    postId: req.body.postId,
    commentDate: new Date()
  }
  let newComment = new CommentModel(body)
  newComment.save(async (err, data) => {
    if (err)
      sendErrorResponse(res, err)
    else {
      let post = await PostModel.findById(req.body.postId)
      post.comments.push(data._id)
      post.save();
      sendSuccessResponse(res, data);
    }
  })
}

const editComment = async (req, res) => {
  CommentModel.findOneAndUpdate({ _id: req.body.commentId, userId: req.body.userId }, { commentContent: req.body.commentContent }, (err, data) => {
    if (err)
      sendErrorResponse(res, err)
    else {
      if (data === null) {
        res.status(400).send({ message: "Sorry you can't edit the comment" })
      }
      else
        sendSuccessResponse(res, req.body)
    }
  })
}

const hideComment = async (req, res) => {

  PostModel.update(
    { "_id": req.body.postId, "userId": req.body.userId },
    { "$pull": { "comments": req.body.commentId } },
    (err, data) => {
      if (err)
        sendErrorResponse(res, err)
      else {
        if(data === null)
          res.status(400).send({message: "Sorry you are not permitted to do this"})
        else
          sendSuccessResponse(res, data)
      }
    }
  )
}

const showComment = async(req,res) => {
  PostModel.update(
    { "_id": req.body.postId, "userId": req.body.userId },
    { "$push": { "comments": req.body.commentId } },
    (err, data) => {
      if (err)
        sendErrorResponse(res, err)
      else {
        if (data === null)
          res.status(400).send({ message: "Sorry you are not permitted to do this" })
        else
          sendSuccessResponse(res, data)
      }
    }
  )
}


