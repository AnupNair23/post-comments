let sendErrorResponse,verifyToken;_f30‍.x([["validateUser",()=>validateUser]]);_f30‍.w("../helper/common",[["sendErrorResponse",["sendErrorResponse"],function(v){sendErrorResponse=v}]]);_f30‍.w("../helper/jwt",[["verifyToken",["verifyToken"],function(v){verifyToken=v}]]);



function validateUser(req, res, next) {
  let authorizationHeader = req.headers['authorization']
  if (authorizationHeader) {
    let token = authorizationHeader.split(' ')[1]
    verifyToken(token, req.app.get('JWTSecretKey'), function (err, decoded) {
      if (err) {
        sendErrorResponse(res, 'Authentication credentials were not provided', err, 401)
      } else {
        req.body.userId = decoded.id;
        next();
      }
    });
  }
}


